{"mappings":"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","sources":["src/js/drawGallery.js","src/js/basedConst.js","src/js/drawPagination.js","src/js/calcNewPgNum.js","src/my-library.js"],"sourcesContent":["/*\n *  MAIN Function for Drawing the Gallery on Page\n */\n\nimport { IMG_BASE_URL, IMG_FILE_SIZE, MAX_GENRES_NUMBER } from \"./basedConst\";\n\nexport function drawGallery(galleryRef, data) {\n    galleryRef.innerHTML = createGalleryMarkup(data);\n    return;\n};\n\nfunction createGalleryMarkup(data) {\n    return data.map((movie, i) => createCardMarkup(movie, i)).join('');\n};\n\nfunction createCardMarkup ({poster_path, genre_ids, title, release_date, vote_average}, movieNumber) {\n    // Fields Description\n    // ==================\n    // poster_path  - relative PATH to VERTICAL image (string)\n    // genre_ids    - ARRAY of all genres (array of numbers)\n    // title        - title (string)\n    // release_date - date (string) in format 'YYYY-MM-DD'\n    // vote_average - vote (number)\n\n    const NO_IMG = 'https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png';\n\n    const imageToDraw = poster_path ? `${IMG_BASE_URL}${IMG_FILE_SIZE}${poster_path}` : NO_IMG;\n    \n    return `\n    <li class=\"gallery__item\" data-movie=\"${movieNumber}\">\n        <a class=\"gallery__link\">\n            <div class=\"img__wrap\">\n                <img class=\"gallery__img\" src=\"${imageToDraw}\">\n            </div>\n            <p class=\"gallery__info\">\n                <span class=\"gallery__info--title\">${title}</span>\n                <span class=\"galery__info--text\">${createListOfGenres(genre_ids)} | ${release_date ? release_date.slice(0, 4) : ''}</span>\n                <span class=\"gallery__info--vote\">${vote_average.toFixed(1)}</span>\n            </p>\n        </a>\n    </li>\n    `;\n}\n\nfunction createListOfGenres(genre_ids) {\n\n    // create Array of Genres Names form Array of Genres Ids \n    const genresNames = genre_ids.map(getGenresNames);\n    \n    if (!genresNames) return '';\n\n    // return list of genres not more than 3\n    if (genresNames.length <= MAX_GENRES_NUMBER) {\n        return genresNames.join(', ');\n    } else {\n        return [...genresNames.slice(0,(MAX_GENRES_NUMBER - 1)), 'other...'].join(', ');\n    };\n}\n\nfunction getGenresNames(genreId) {\n    // get All Genres Names from Local Storage \n    const genresAll = JSON.parse(localStorage.getItem('genres'));\n\n    // Find and Return the Name of Genre on Id \n    return genresAll\n        .find(genre => genre.id === genreId)\n        .name;\n}\n","// CREATE Movie Card MARKUP\n// ('drawGallery.js')\n// \nexport const IMG_BASE_URL = 'https://image.tmdb.org/t/p/';  // Base URL to get movies dates\nexport const IMG_FILE_SIZE = 'w500';                        // image width\nexport const MAX_GENRES_NUMBER = 3;                         // not more than 3 genres in movie card\n\n// DRAW PAGINATION on the Current Movies Gallery\n// ('drawPagination.js')\n// \nexport const NUMS_PER_PAGE = 5;                             // Number of Numbers in Pagination","/*\n *  MAIN Function for Drawing Pagination on the current Movies Gallery\n */\n\nimport { NUMS_PER_PAGE } from \"./basedConst\";\n\nexport function drawPagination(pgRef, pgCurrent, totalPages) {\n    const pgNumsMarkup = `\n            <button type=\"button\" class=\"num-btn mobile-hiding\" data-page=\"first\">1</button>\n            <span class=\"num-btn mobile-hiding\" data-page=\"${pgCurrent}\">...</span>    \n            ${pgNumsCurrPgMarkup(pgCurrent, totalPages)}\n            <span class=\"num-btn mobile-hiding\" data-page=\"${pgCurrent}\">...</span>    \n            <button type=\"button\" class=\"num-btn mobile-hiding\" data-page=\"last\">${totalPages}</button>\n        `;\n\n    pgRef.innerHTML = pgNumsMarkup;\n}\n\nfunction pgNumsCurrPgMarkup(pgCurrent, totalPages) {\n    let pgBegin = 1;\n    let pgEnd = totalPages;\n\n    let markup = '';\n\n    if (totalPages > NUMS_PER_PAGE) {\n        if (pgCurrent < 3) {\n            pgEnd = NUMS_PER_PAGE;\n        } else if (pgCurrent > (totalPages - 3)) {\n            pgBegin = totalPages - NUMS_PER_PAGE + 1;\n            pgEnd = totalPages;\n        } else {\n            pgBegin = pgCurrent - 2;\n            pgEnd = pgCurrent + 2;\n        };\n    }\n\n    for (let i = pgBegin; i <= pgEnd; i++) {\n        markup += `\n        <span\n            class=\"${i !== pgCurrent ? 'num-btn' : 'pg-btn pg-btn--cur'}\"\n            data-page=\"${i}\">${i}</span>\n        `;\n    };\n    \n    return markup;\n}\n","/*\n *  Function to Calculate New Page Number based on the Current and Target Numbers  \n */\nexport function calcNewPgNum(currPgNum, targetPage, totalPages) {\n        switch (targetPage) {\n        case 'first': {\n            return 1;\n        };\n        case 'last': {\n            return totalPages;\n        };\n        case 'prev': {\n            return (currPgNum === 1) ? 1 : currPgNum - 1;\n        };\n        case 'next': {\n            return (currPgNum === totalPages) ? totalPages : currPgNum + 1;\n        };\n        default:\n            return +targetPage;\n    }\n}\n","// Основний файл сторінки My library. Сюди будуть імпортуватися окремі функції з ./js/my-library\n// Додавайте ці окремі файли саме у ту папку і експортуйте сюди.\n\nimport { drawGallery } from \"./js/drawGallery\";\nimport { drawPagination } from \"./js/drawPagination\";\nimport { calcNewPgNum } from \"./js/calcNewPgNum\";\n// \nconst queueBtnRef = document.querySelector('#queue');\nconst watchedBtnRef = document.querySelector('#watched');\nconst buttonsRef = document.querySelector('.header__buttons');\nconst galleryRef = document.querySelector('.gallery');\nconst paginationRef = document.querySelector('#pagination');\nconst pageNumRef = document.querySelector('#page-numbers');\n// \nconst MOVIES_PER_PAGE = 20;\nconst LOCAL_MOVIES_KEY = 'localMovies';\n// \nconst STORAGE_KEYS = {\n    watched: 'watchedAll',\n    queue: 'queueAll',\n}\n// \nconst LOCAL_MOVIES_RULES = {\n    watched: 'watched',\n    queue: 'queue',\n};\n//\n\n/* Rendering Initial Values*/\nreDrawLocalMovies(LOCAL_MOVIES_RULES.watched, 1);\n\n/*\n * ===================\n */\n\n/* MAIN Content Rendering Function */\nfunction reDrawLocalMovies(rules, pgNum) {\n    // Get movies Full List from needed Local Storage  \n    const movies = JSON.parse(localStorage.getItem(STORAGE_KEYS[rules]));\n\n    if (movies) {\n        const localMovies = {\n            page: pgNum,\n            total_pages: movies.total_pages,\n            total_results: movies.total_results,\n            results: movies.results.slice(MOVIES_PER_PAGE * (pgNum - 1), MOVIES_PER_PAGE * pgNum),\n            rules,\n        }\n\n        localStorage.setItem(LOCAL_MOVIES_KEY, JSON.stringify(localMovies));\n\n        drawGallery(galleryRef, localMovies.results);\n        drawPagination(pageNumRef, pgNum, localMovies.total_pages);\n    \n        paginationRef.addEventListener('click', onPgNumClk);\n        galleryRef.addEventListener('click', onGalleryClk);\n    } else {\n\n        drawEmptyGallery();\n};\n    \n    window.scrollTo(0, 0);\n    buttonsRef.addEventListener('click', onBtnClk);\n};\n\nfunction drawEmptyGallery() {\n    galleryRef.innerHTML = '<h1>EMPTY gallery</h1>';\n    pageNumRef.innerHTML = '';\n}\n\nfunction onBtnClk(e) {\n    buttonsRef.removeEventListener('click', onBtnClk);\n    \n    if (e.target.id === 'watched') {\n        watchedBtnRef.classList.add('btn--is-active')\n        queueBtnRef.classList.remove('btn--is-active');\n\n        reDrawLocalMovies(LOCAL_MOVIES_RULES.watched, 1)\n    } else {\n        watchedBtnRef.classList.remove('btn--is-active')\n        queueBtnRef.classList.add('btn--is-active');\n\n        reDrawLocalMovies(LOCAL_MOVIES_RULES.queue, 1)\n    };\n}\n\n\nfunction onGalleryClk(e) {\n    const movieNumberEl = e.target.closest('.gallery__item');\n    // console.log(e.target);\n    // console.log(movieNumberEl);\n    console.log(`%c${movieNumberEl.dataset.movie}`, 'color: yellow; background-color: red; display: inline-block; padding: 5px; font-weight: bold;');\n};\n\nfunction onPgNumClk(e) {\n    if (!e.target.closest('[data-page]')) {\n        return\n    };\n\n    pageNumRef.removeEventListener('click', onPgNumClk);\n\n    const targetPageNum = e.target.closest('[data-page]').dataset.page;\n\n    // if (!targetPageNum) {\n    //     return;\n    // }\n\n    const localMovies = JSON.parse(localStorage.getItem(LOCAL_MOVIES_KEY));\n\n    const currentPageNum = localMovies.page;\n    const totalPages = localMovies.total_pages;\n\n    const newPageNum = calcNewPgNum(currentPageNum, targetPageNum, totalPages);\n\n    reDrawLocalMovies(localMovies.rules, newPageNum);\n};\n\n    // GET TRENDING\n    // const MEDIA_TYPE = 'movie';\n    // const TIME_WINDOW = 'day'; // day | week\n    // https://api.themoviedb.org/3/trending/{MEDIA_TYPE}/{TIME_WINDOW}?api_key=<<api_key>>\n    // \n    \n    \n    // GET SEARCH QUERY\n    // \n    // https://api.themoviedb.org/3/search/movie?api_key=b282a22ae665f5f17a32a077013d243c&query=cat&page=1&include_adult=false\n"],"names":["$7b36ab853067c18b$export$7ec26c61cb09926e","galleryRef","data","innerHTML","map","movie","i","poster_path","genre_ids","title","release_date","vote_average","movieNumber","NO_IMG","genresNames","$7b36ab853067c18b$var$getGenresNames","length","join","slice","$7b36ab853067c18b$var$createListOfGenres","toFixed","$7b36ab853067c18b$var$createCardMarkup","$7b36ab853067c18b$var$createGalleryMarkup","genreId","JSON","parse","localStorage","getItem","find","genre","id","name","$8df3c7cdedcdcab7$export$5ef00bacf2f98110","pgRef","pgCurrent","totalPages","pgNumsMarkup","pgBegin","pgEnd","markup","$8df3c7cdedcdcab7$var$pgNumsCurrPgMarkup","$608bea33df21ea1c$export$aed04366a6e3791","currPgNum","targetPage","$865c390aa2d1ad34$var$queueBtnRef","document","querySelector","$865c390aa2d1ad34$var$watchedBtnRef","$865c390aa2d1ad34$var$buttonsRef","$865c390aa2d1ad34$var$galleryRef","$865c390aa2d1ad34$var$paginationRef","$865c390aa2d1ad34$var$pageNumRef","$865c390aa2d1ad34$var$LOCAL_MOVIES_KEY","$865c390aa2d1ad34$var$STORAGE_KEYS","watched","queue","$865c390aa2d1ad34$var$LOCAL_MOVIES_RULES","$865c390aa2d1ad34$var$reDrawLocalMovies","rules","pgNum","movies","localMovies","page","total_pages","total_results","results","setItem","stringify","addEventListener","$865c390aa2d1ad34$var$onPgNumClk","$865c390aa2d1ad34$var$onGalleryClk","window","scrollTo","$865c390aa2d1ad34$var$onBtnClk","e","removeEventListener","target","classList","add","remove","movieNumberEl","closest","console","log","dataset","targetPageNum","newPageNum"],"version":3,"file":"my-library.d01bce6c.js.map"}